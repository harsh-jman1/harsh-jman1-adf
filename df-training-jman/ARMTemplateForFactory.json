{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "df-training-jman"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"LS_InvoiceBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_InvoiceBlob'"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "db-server-jman.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "db-train-sql"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "harshadmin"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_Blob_To_AzureSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Insert Customer Data To Server",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_CustomerInput",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CustomerSQLSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Insert Order Data To Server",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Insert Customer Data To Server",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OrderDetailInput",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_OrderDetailSQLSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-27T06:19:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CustomerInput')]",
				"[concat(variables('factoryId'), '/datasets/DS_CustomerSQLSink')]",
				"[concat(variables('factoryId'), '/datasets/DS_OrderDetailInput')]",
				"[concat(variables('factoryId'), '/datasets/DS_OrderDetailSQLSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Calculate_Total_Amount')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update Price",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Calculate_Single_Price_Update_Quantity",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"OrderDetails": {},
									"OutputSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-27T06:36:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_Calculate_Single_Price_Update_Quantity')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Consolidation_Insertion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Consolidation Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Create_Consolidated_Files",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute SQL Insert Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Consolidation Pipeline",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Blob_To_AzureSQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-27T05:28:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Create_Consolidated_Files')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Blob_To_AzureSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Create_Consolidated_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Customer Details",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "input",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_csvInput",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_OrderDetailsSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Order Details",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Customer Details",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "input",
									"wildcardFileName": "*.xlsx",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_excelInput",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CustomerDetailsSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-08-27T05:28:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_csvInput')]",
				"[concat(variables('factoryId'), '/datasets/DS_OrderDetailsSink')]",
				"[concat(variables('factoryId'), '/datasets/DS_excelInput')]",
				"[concat(variables('factoryId'), '/datasets/DS_CustomerDetailsSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CustomerDetailsSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_InvoiceBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "orderdetails.csv",
						"container": "consolidatedblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "C024",
						"type": "String"
					},
					{
						"name": "Sophia",
						"type": "String"
					},
					{
						"name": "Green",
						"type": "String"
					},
					{
						"name": "sophia.green@example.com",
						"type": "String"
					},
					{
						"name": "555-1023",
						"type": "String"
					},
					{
						"name": "2121 Rosewood St",
						"type": "String"
					},
					{
						"name": "City X",
						"type": "String"
					},
					{
						"name": "CA",
						"type": "String"
					},
					{
						"name": "90003",
						"type": "String"
					},
					{
						"name": "USA",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_InvoiceBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CustomerInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_InvoiceBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "customerdetails.csv",
						"container": "consolidatedblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "PhoneNumber",
						"type": "String"
					},
					{
						"name": "Address",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "ZipCode",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_InvoiceBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CustomerSQLSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerID",
						"type": "varchar"
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "Email",
						"type": "varchar"
					},
					{
						"name": "PhoneNumber",
						"type": "varchar"
					},
					{
						"name": "Address",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "varchar"
					},
					{
						"name": "ZipCode",
						"type": "varchar"
					},
					{
						"name": "Country",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_InputDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_InvoiceBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "input",
						"container": "invoiceblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "PhoneNumber",
						"type": "String"
					},
					{
						"name": "Address",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "ZipCode",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_InvoiceBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_OrderDetailInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_InvoiceBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "orderdetails.csv",
						"container": "consolidatedblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "OrderID",
						"type": "String"
					},
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "ProductName",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "OrderTimestamp",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_InvoiceBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_OrderDetailSQLSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "nvarchar"
					},
					{
						"name": "ProductID",
						"type": "nvarchar"
					},
					{
						"name": "ProductName",
						"type": "nvarchar"
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderTimestamp",
						"type": "nvarchar"
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 21,
						"scale": 2
					},
					{
						"name": "CustomerID",
						"type": "nvarchar"
					},
					{
						"name": "SinglePrice",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "OrderDetail"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_OrderDetail_Updated_SQLSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "nvarchar"
					},
					{
						"name": "ProductID",
						"type": "nvarchar"
					},
					{
						"name": "ProductName",
						"type": "nvarchar"
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderTimestamp",
						"type": "nvarchar"
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 21,
						"scale": 2
					},
					{
						"name": "CustomerID",
						"type": "nvarchar"
					},
					{
						"name": "SinglePrice",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "OrderDetailUpdated"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_OrderDetailsSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_InvoiceBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "customerdetails.csv",
						"container": "consolidatedblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_InvoiceBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_OrderDetailsUpdated_Input_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "nvarchar"
					},
					{
						"name": "ProductID",
						"type": "nvarchar"
					},
					{
						"name": "ProductName",
						"type": "nvarchar"
					},
					{
						"name": "Quantity",
						"type": "nvarchar"
					},
					{
						"name": "OrderTimestamp",
						"type": "nvarchar"
					},
					{
						"name": "Price",
						"type": "nvarchar"
					},
					{
						"name": "CustomerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "OrderDetailUpdated"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_OrderDetails_Input_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "OrderID",
						"type": "nvarchar"
					},
					{
						"name": "ProductID",
						"type": "nvarchar"
					},
					{
						"name": "ProductName",
						"type": "nvarchar"
					},
					{
						"name": "Quantity",
						"type": "nvarchar"
					},
					{
						"name": "OrderTimestamp",
						"type": "nvarchar"
					},
					{
						"name": "Price",
						"type": "nvarchar"
					},
					{
						"name": "CustomerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "OrderDetail"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_csvInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_InvoiceBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "invoiceblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_InvoiceBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_excelInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_InvoiceBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "input",
						"container": "invoiceblob"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "OrderID",
						"type": "String"
					},
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "ProductName",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "OrderTimestamp",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_InvoiceBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_InvoiceBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_InvoiceBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Calculate_Single_Price')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_OrderDetails_Input_SQL",
								"type": "DatasetReference"
							},
							"name": "OrderDetails"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_OrderDetail_Updated_SQLSink",
								"type": "DatasetReference"
							},
							"name": "OutputSink"
						}
					],
					"transformations": [
						{
							"name": "SinglePrice"
						}
					],
					"scriptLines": [
						"source(output(",
						"          OrderID as string,",
						"          ProductID as string,",
						"          ProductName as string,",
						"          Quantity as integer,",
						"          OrderTimestamp as string,",
						"          Price as float,",
						"          CustomerID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> OrderDetails",
						"OrderDetails derive(SinglePrice = toDecimal(toFloat(Price)/toFloat(Quantity))) ~> SinglePrice",
						"SinglePrice sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          OrderID as string,",
						"          ProductID as string,",
						"          ProductName as string,",
						"          Quantity as integer,",
						"          OrderTimestamp as string,",
						"          Price as decimal(21,2),",
						"          CustomerID as string,",
						"          SinglePrice as decimal(10,2)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError') ~> OutputSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OrderDetails_Input_SQL')]",
				"[concat(variables('factoryId'), '/datasets/DS_OrderDetail_Updated_SQLSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Calculate_Single_Price_Update_Quantity')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_OrderDetails_Input_SQL",
								"type": "DatasetReference"
							},
							"name": "OrderDetails"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_OrderDetail_Updated_SQLSink",
								"type": "DatasetReference"
							},
							"name": "OutputSink"
						}
					],
					"transformations": [
						{
							"name": "SinglePrice"
						},
						{
							"name": "UpdateQuantity"
						},
						{
							"name": "UpdatePrice"
						}
					],
					"scriptLines": [
						"source(output(",
						"          OrderID as string,",
						"          ProductID as string,",
						"          ProductName as string,",
						"          Quantity as integer,",
						"          OrderTimestamp as string,",
						"          Price as decimal(21,2),",
						"          CustomerID as string,",
						"          SinglePrice as decimal(10,2)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> OrderDetails",
						"OrderDetails derive(SinglePrice = toDecimal(toFloat(Price)/toFloat(Quantity))) ~> SinglePrice",
						"SinglePrice derive(Quantity = Quantity + 1) ~> UpdateQuantity",
						"UpdateQuantity derive(Price = Quantity * SinglePrice) ~> UpdatePrice",
						"UpdatePrice sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          OrderID as string,",
						"          ProductID as string,",
						"          ProductName as string,",
						"          Quantity as integer,",
						"          OrderTimestamp as string,",
						"          Price as decimal(21,2),",
						"          CustomerID as string,",
						"          SinglePrice as decimal(10,2)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError') ~> OutputSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OrderDetails_Input_SQL')]",
				"[concat(variables('factoryId'), '/datasets/DS_OrderDetail_Updated_SQLSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Update_Quantity_Price')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_OrderDetailsUpdated_Input_SQL",
								"type": "DatasetReference"
							},
							"name": "OrderDetails",
							"description": "Import data from DS_OrderDetailsUpdated_Input_SQL "
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_OrderDetail_Updated_SQLSink",
								"type": "DatasetReference"
							},
							"name": "OutputSink"
						}
					],
					"transformations": [
						{
							"name": "UpdatePrice"
						}
					],
					"scriptLines": [
						"source(output(",
						"          OrderID as string,",
						"          ProductID as string,",
						"          ProductName as string,",
						"          Quantity as integer,",
						"          OrderTimestamp as string,",
						"          Price as decimal(21,2),",
						"          CustomerID as string,",
						"          SinglePrice as decimal(10,2)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> OrderDetails",
						"OrderDetails derive(Price = toDecimal(toFloat(Quantity) *  toFloat(SinglePrice))) ~> UpdatePrice",
						"UpdatePrice sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          OrderID as string,",
						"          ProductID as string,",
						"          ProductName as string,",
						"          Quantity as integer,",
						"          OrderTimestamp as string,",
						"          Price as decimal(21,2),",
						"          CustomerID as string,",
						"          SinglePrice as decimal(10,2)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError') ~> OutputSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OrderDetailsUpdated_Input_SQL')]",
				"[concat(variables('factoryId'), '/datasets/DS_OrderDetail_Updated_SQLSink')]"
			]
		}
	]
}